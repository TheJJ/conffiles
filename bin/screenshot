#!/usr/bin/env python3

"""
take screenshots and copy them to the clipboard

(c) 2022-2024 Jonas Jelten <jj@sft.lol>

GPLv3 or later.
"""

import argparse
import datetime
import os
import pathlib
import subprocess


def main():
    """
    take a screenshot n shit.
    """
    cli = argparse.ArgumentParser()

    cli.add_argument("-s", "--select", action='store_true',
                     help='use mouse selection')
    cli.add_argument("-o", "--output", default="~/Pictures/screenshots/<stamp>.png",
                     help='output filename, <stamp> is replaced with iso timestamp')

    args = cli.parse_args()

    outfile = args.output.replace('<stamp>', datetime.datetime.now().isoformat())

    outpath = pathlib.Path(os.path.expanduser(outfile))

    if os.environ.get("XDG_SESSION_TYPE") == "wayland":
        take_screenshot_wayland(outpath, args.select)
    else:
        take_screenshot_x(outpath, args.select)

def take_screenshot_wayland(filepath, mouse_select=False):
    """
    take a screenshot with grim, with selection using slurp on wayland.
    put it to the clipboard with wl-copy from gui-apps/wl-clipboard.
    """
    options = ['-l', '8'] # png compression

    if mouse_select:
        region_select = subprocess.check_output(['slurp', '-d']).decode()
        options.extend(['-g', region_select.strip()])

    subprocess.run(['grim'] + options + [filepath], check=True)
    with open(filepath, "rb") as imagehdl:
        subprocess.run(["wl-copy", "--type", "image/png"], stdin=imagehdl, check=True)


def take_screenshot_x(filepath, mouse_select=False):
    """
    call maim and shoot the screen on X11.
    """
    options = []
    if mouse_select:
        options.append('-s')

    options.append('--')
    options.append(str(filepath))

    # also supports scrot as alternative tool
    subprocess.run(['maim'] + options, check=True)

    # and copy to clipboard!
    subprocess.run(['xclip', '-selection', 'clipboard', '-t', 'image/png', '-i', str(filepath)], check=True)


if __name__ == "__main__":
    main()
